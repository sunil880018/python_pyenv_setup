

STEP 1. To install pyenv on Debian or Ubuntu-based Linux distributions, you have to install several 
        libraries and packages necessary for building Python from scratch. Enter the following command 
        into your terminal to install all necessary packages:

        i) sudo apt install -y make build-essential libssl-dev zlib1g-dev \
           libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
           libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl \
           git


STEP 2. To install pyenv you can clone it directly from the GitHub repository:
        
        i) git clone https://github.com/pyenv/pyenv.git ~/.pyenv


STEP 3. After cloning it you need to enter the following commands to add pyenv to your $PATH and start it 
        when a new terminal is opened (if you use a different shell than bash you have to change ~/.bashrc accordingly):


        i) echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
        ii) echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
        iii) echo 'eval "$(pyenv init --path)"' >> ~/.bashrc




---------------------------------- Using Pyenv -----------------------------------


        After you successfully installed pyenv it is time to look at the different commands that pyenv 
        offers to manage different Python versions.Probably the most important command is:

        i) pyenv install [PYTHON_VERSION]


        To see all versions that are available to install enter:

        ii) pyenv install -l
        
        iii) pyenv versions

        iv) If you want to know which Python version is currently active in your shell, just type:
           --> pyenv version


        v) To set a project Python version that is active as soon as you “cd” into the project directory, enter 
           the following when you are inside of the project’s root directory:

           --> pyenv local [PYTHON_VERSION]


        